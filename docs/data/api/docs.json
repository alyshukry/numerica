{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "numerica",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "spell",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "spell.ts",
					"line": 66,
					"character": 16,
					"url": "https://github.com/alyshukry/numerica/blob/263c0b3f55f7b5a4275d26e8912460b378c36431/src/spell.ts#L66"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "spell",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts a number into its written word representation"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The number spelled out as words"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Basic usage\r\n"
									},
									{
										"kind": "code",
										"text": "```ts\r\nspell(42)\r\n// Returns: \"forty two\"\r\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "With hyphens\r\n"
									},
									{
										"kind": "code",
										"text": "```ts\r\nspell(42, true)\r\n// Returns: \"forty-two\"\r\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "With \"and\" after hundreds\r\n"
									},
									{
										"kind": "code",
										"text": "```ts\r\nspell(123, false, true)\r\n// Returns: \"one hundred and twenty three\"\r\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Large numbers\r\n"
									},
									{
										"kind": "code",
										"text": "```ts\r\nspell(1234567)\r\n// Returns: \"one million two hundred thirty four thousand five hundred sixty seven\"\r\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Custom separator\r\n"
									},
									{
										"kind": "code",
										"text": "```ts\r\nspell(42, false, false, \"_\")\r\n// Returns: \"forty_two\"\r\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Zero\r\n"
									},
									{
										"kind": "code",
										"text": "```ts\r\nspell(0)\r\n// Returns: \"zero\"\r\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "spell.ts",
							"line": 66,
							"character": 16,
							"url": "https://github.com/alyshukry/numerica/blob/263c0b3f55f7b5a4275d26e8912460b378c36431/src/spell.ts#L66"
						}
					],
					"parameters": [
						{
							"id": 3,
							"name": "n",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number to convert (must be a non-negative integer)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4,
							"name": "hyphens",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to use hyphens between tens and ones (e.g., \"twenty-one\" vs \"twenty one\"). Default: false"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5,
							"name": "and",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to include \"and\" after hundreds (e.g., \"one hundred and twenty\" vs \"one hundred twenty\"). Default: false"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 6,
							"name": "separator",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The separator to use between words. Default: \" \" (space)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\" \""
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Functions",
			"children": [
				1
			]
		}
	],
	"packageName": "numerica",
	"symbolIdMap": {
		"0": {
			"packageName": "numerica",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"packageName": "numerica",
			"packagePath": "src/spell.ts",
			"qualifiedName": "spell"
		},
		"2": {
			"packageName": "numerica",
			"packagePath": "src/spell.ts",
			"qualifiedName": "spell"
		},
		"3": {
			"packageName": "numerica",
			"packagePath": "src/spell.ts",
			"qualifiedName": "n"
		},
		"4": {
			"packageName": "numerica",
			"packagePath": "src/spell.ts",
			"qualifiedName": "hyphens"
		},
		"5": {
			"packageName": "numerica",
			"packagePath": "src/spell.ts",
			"qualifiedName": "and"
		},
		"6": {
			"packageName": "numerica",
			"packagePath": "src/spell.ts",
			"qualifiedName": "separator"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
